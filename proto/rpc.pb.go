// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: proto/rpc.proto

package tictac

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcType int32

const (
	RpcType_HellowWorld     RpcType = 0
	RpcType_CreateGame      RpcType = 1
	RpcType_JoinGame        RpcType = 2
	RpcType_OccupyPosition  RpcType = 3
	RpcType_CheckGameResult RpcType = 4
)

// Enum value maps for RpcType.
var (
	RpcType_name = map[int32]string{
		0: "HellowWorld",
		1: "CreateGame",
		2: "JoinGame",
		3: "OccupyPosition",
		4: "CheckGameResult",
	}
	RpcType_value = map[string]int32{
		"HellowWorld":     0,
		"CreateGame":      1,
		"JoinGame":        2,
		"OccupyPosition":  3,
		"CheckGameResult": 4,
	}
)

func (x RpcType) Enum() *RpcType {
	p := new(RpcType)
	*p = x
	return p
}

func (x RpcType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_rpc_proto_enumTypes[0].Descriptor()
}

func (RpcType) Type() protoreflect.EnumType {
	return &file_proto_rpc_proto_enumTypes[0]
}

func (x RpcType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcType.Descriptor instead.
func (RpcType) EnumDescriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{0}
}

type RpcStatus int32

const (
	RpcStatus_NoError       RpcStatus = 0
	RpcStatus_UnknownStatus RpcStatus = 1
)

// Enum value maps for RpcStatus.
var (
	RpcStatus_name = map[int32]string{
		0: "NoError",
		1: "UnknownStatus",
	}
	RpcStatus_value = map[string]int32{
		"NoError":       0,
		"UnknownStatus": 1,
	}
)

func (x RpcStatus) Enum() *RpcStatus {
	p := new(RpcStatus)
	*p = x
	return p
}

func (x RpcStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_rpc_proto_enumTypes[1].Descriptor()
}

func (RpcStatus) Type() protoreflect.EnumType {
	return &file_proto_rpc_proto_enumTypes[1]
}

func (x RpcStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcStatus.Descriptor instead.
func (RpcStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{1}
}

type JoinResult int32

const (
	JoinResult_JoinSuccess  JoinResult = 0
	JoinResult_NoGame       JoinResult = 1
	JoinResult_GameFinished JoinResult = 2
	JoinResult_GameIsFull   JoinResult = 3
)

// Enum value maps for JoinResult.
var (
	JoinResult_name = map[int32]string{
		0: "JoinSuccess",
		1: "NoGame",
		2: "GameFinished",
		3: "GameIsFull",
	}
	JoinResult_value = map[string]int32{
		"JoinSuccess":  0,
		"NoGame":       1,
		"GameFinished": 2,
		"GameIsFull":   3,
	}
)

func (x JoinResult) Enum() *JoinResult {
	p := new(JoinResult)
	*p = x
	return p
}

func (x JoinResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_rpc_proto_enumTypes[2].Descriptor()
}

func (JoinResult) Type() protoreflect.EnumType {
	return &file_proto_rpc_proto_enumTypes[2]
}

func (x JoinResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinResult.Descriptor instead.
func (JoinResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{2}
}

type OccupyResult int32

const (
	OccupyResult_OccupySuccess   OccupyResult = 0
	OccupyResult_HasBeenTaken    OccupyResult = 1
	OccupyResult_InvalidPosition OccupyResult = 2
	OccupyResult_NotYourTurn     OccupyResult = 3
	OccupyResult_InvalidGame     OccupyResult = 4
	OccupyResult_NotAPlayer      OccupyResult = 5
)

// Enum value maps for OccupyResult.
var (
	OccupyResult_name = map[int32]string{
		0: "OccupySuccess",
		1: "HasBeenTaken",
		2: "InvalidPosition",
		3: "NotYourTurn",
		4: "InvalidGame",
		5: "NotAPlayer",
	}
	OccupyResult_value = map[string]int32{
		"OccupySuccess":   0,
		"HasBeenTaken":    1,
		"InvalidPosition": 2,
		"NotYourTurn":     3,
		"InvalidGame":     4,
		"NotAPlayer":      5,
	}
)

func (x OccupyResult) Enum() *OccupyResult {
	p := new(OccupyResult)
	*p = x
	return p
}

func (x OccupyResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OccupyResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_rpc_proto_enumTypes[3].Descriptor()
}

func (OccupyResult) Type() protoreflect.EnumType {
	return &file_proto_rpc_proto_enumTypes[3]
}

func (x OccupyResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OccupyResult.Descriptor instead.
func (OccupyResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{3}
}

type GameResult int32

const (
	GameResult_WaitMoreJoin GameResult = 0
	GameResult_Ongoing      GameResult = 1
	GameResult_Win          GameResult = 2
	GameResult_Draw         GameResult = 3
	GameResult_Lose         GameResult = 4
)

// Enum value maps for GameResult.
var (
	GameResult_name = map[int32]string{
		0: "WaitMoreJoin",
		1: "Ongoing",
		2: "Win",
		3: "Draw",
		4: "Lose",
	}
	GameResult_value = map[string]int32{
		"WaitMoreJoin": 0,
		"Ongoing":      1,
		"Win":          2,
		"Draw":         3,
		"Lose":         4,
	}
)

func (x GameResult) Enum() *GameResult {
	p := new(GameResult)
	*p = x
	return p
}

func (x GameResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_rpc_proto_enumTypes[4].Descriptor()
}

func (GameResult) Type() protoreflect.EnumType {
	return &file_proto_rpc_proto_enumTypes[4]
}

func (x GameResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameResult.Descriptor instead.
func (GameResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{4}
}

type RpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcType                RpcType                 `protobuf:"varint,1,opt,name=rpcType,proto3,enum=tictactoe.RpcType" json:"rpcType,omitempty"`
	HelloWorldRequest      *HelloWorldRequest      `protobuf:"bytes,10,opt,name=helloWorldRequest,proto3" json:"helloWorldRequest,omitempty"`
	CreateGameRequest      *CreateGameRequest      `protobuf:"bytes,11,opt,name=createGameRequest,proto3" json:"createGameRequest,omitempty"`
	JoinGameRequest        *JoinGameRequest        `protobuf:"bytes,12,opt,name=joinGameRequest,proto3" json:"joinGameRequest,omitempty"`
	OccupyPositionRequest  *OccupyPositionRequest  `protobuf:"bytes,13,opt,name=occupyPositionRequest,proto3" json:"occupyPositionRequest,omitempty"`
	CheckGameResultRequest *CheckGameResultRequest `protobuf:"bytes,14,opt,name=checkGameResultRequest,proto3" json:"checkGameResultRequest,omitempty"`
}

func (x *RpcRequest) Reset() {
	*x = RpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRequest) ProtoMessage() {}

func (x *RpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRequest.ProtoReflect.Descriptor instead.
func (*RpcRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *RpcRequest) GetRpcType() RpcType {
	if x != nil {
		return x.RpcType
	}
	return RpcType_HellowWorld
}

func (x *RpcRequest) GetHelloWorldRequest() *HelloWorldRequest {
	if x != nil {
		return x.HelloWorldRequest
	}
	return nil
}

func (x *RpcRequest) GetCreateGameRequest() *CreateGameRequest {
	if x != nil {
		return x.CreateGameRequest
	}
	return nil
}

func (x *RpcRequest) GetJoinGameRequest() *JoinGameRequest {
	if x != nil {
		return x.JoinGameRequest
	}
	return nil
}

func (x *RpcRequest) GetOccupyPositionRequest() *OccupyPositionRequest {
	if x != nil {
		return x.OccupyPositionRequest
	}
	return nil
}

func (x *RpcRequest) GetCheckGameResultRequest() *CheckGameResultRequest {
	if x != nil {
		return x.CheckGameResultRequest
	}
	return nil
}

type RpcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                  RpcStatus                `protobuf:"varint,1,opt,name=status,proto3,enum=tictactoe.RpcStatus" json:"status,omitempty"`
	HellowWorldResponse     *HellowWorldResponse     `protobuf:"bytes,10,opt,name=hellowWorldResponse,proto3" json:"hellowWorldResponse,omitempty"`
	CreateGameResponse      *CreateGameResponse      `protobuf:"bytes,11,opt,name=createGameResponse,proto3" json:"createGameResponse,omitempty"`
	JoinGameResponse        *JoinGameResponse        `protobuf:"bytes,12,opt,name=joinGameResponse,proto3" json:"joinGameResponse,omitempty"`
	OccupyPositionResponse  *OccupyPositionResponse  `protobuf:"bytes,13,opt,name=occupyPositionResponse,proto3" json:"occupyPositionResponse,omitempty"`
	CheckGameResultResponse *CheckGameResultResponse `protobuf:"bytes,14,opt,name=checkGameResultResponse,proto3" json:"checkGameResultResponse,omitempty"`
}

func (x *RpcResponse) Reset() {
	*x = RpcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcResponse) ProtoMessage() {}

func (x *RpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcResponse.ProtoReflect.Descriptor instead.
func (*RpcResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *RpcResponse) GetStatus() RpcStatus {
	if x != nil {
		return x.Status
	}
	return RpcStatus_NoError
}

func (x *RpcResponse) GetHellowWorldResponse() *HellowWorldResponse {
	if x != nil {
		return x.HellowWorldResponse
	}
	return nil
}

func (x *RpcResponse) GetCreateGameResponse() *CreateGameResponse {
	if x != nil {
		return x.CreateGameResponse
	}
	return nil
}

func (x *RpcResponse) GetJoinGameResponse() *JoinGameResponse {
	if x != nil {
		return x.JoinGameResponse
	}
	return nil
}

func (x *RpcResponse) GetOccupyPositionResponse() *OccupyPositionResponse {
	if x != nil {
		return x.OccupyPositionResponse
	}
	return nil
}

func (x *RpcResponse) GetCheckGameResultResponse() *CheckGameResultResponse {
	if x != nil {
		return x.CheckGameResultResponse
	}
	return nil
}

type HelloWorldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GreetingMessage string `protobuf:"bytes,1,opt,name=greetingMessage,proto3" json:"greetingMessage,omitempty"`
}

func (x *HelloWorldRequest) Reset() {
	*x = HelloWorldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloWorldRequest) ProtoMessage() {}

func (x *HelloWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloWorldRequest.ProtoReflect.Descriptor instead.
func (*HelloWorldRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *HelloWorldRequest) GetGreetingMessage() string {
	if x != nil {
		return x.GreetingMessage
	}
	return ""
}

type HellowWorldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnedMessage string `protobuf:"bytes,1,opt,name=returnedMessage,proto3" json:"returnedMessage,omitempty"`
}

func (x *HellowWorldResponse) Reset() {
	*x = HellowWorldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HellowWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HellowWorldResponse) ProtoMessage() {}

func (x *HellowWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HellowWorldResponse.ProtoReflect.Descriptor instead.
func (*HellowWorldResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *HellowWorldResponse) GetReturnedMessage() string {
	if x != nil {
		return x.ReturnedMessage
	}
	return ""
}

type CreateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGameRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *CreateGameResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type JoinGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	GameId string `protobuf:"bytes,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *JoinGameRequest) Reset() {
	*x = JoinGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameRequest) ProtoMessage() {}

func (x *JoinGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameRequest.ProtoReflect.Descriptor instead.
func (*JoinGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *JoinGameRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JoinGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type JoinGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result JoinResult `protobuf:"varint,1,opt,name=result,proto3,enum=tictactoe.JoinResult" json:"result,omitempty"`
}

func (x *JoinGameResponse) Reset() {
	*x = JoinGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameResponse) ProtoMessage() {}

func (x *JoinGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameResponse.ProtoReflect.Descriptor instead.
func (*JoinGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *JoinGameResponse) GetResult() JoinResult {
	if x != nil {
		return x.Result
	}
	return JoinResult_JoinSuccess
}

type OccupyPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	X      int32  `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y      int32  `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *OccupyPositionRequest) Reset() {
	*x = OccupyPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccupyPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccupyPositionRequest) ProtoMessage() {}

func (x *OccupyPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccupyPositionRequest.ProtoReflect.Descriptor instead.
func (*OccupyPositionRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *OccupyPositionRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *OccupyPositionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OccupyPositionRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *OccupyPositionRequest) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type OccupyPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OccupyResult OccupyResult `protobuf:"varint,1,opt,name=occupyResult,proto3,enum=tictactoe.OccupyResult" json:"occupyResult,omitempty"`
}

func (x *OccupyPositionResponse) Reset() {
	*x = OccupyPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OccupyPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OccupyPositionResponse) ProtoMessage() {}

func (x *OccupyPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OccupyPositionResponse.ProtoReflect.Descriptor instead.
func (*OccupyPositionResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *OccupyPositionResponse) GetOccupyResult() OccupyResult {
	if x != nil {
		return x.OccupyResult
	}
	return OccupyResult_OccupySuccess
}

type CheckGameResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
}

func (x *CheckGameResultRequest) Reset() {
	*x = CheckGameResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGameResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGameResultRequest) ProtoMessage() {}

func (x *CheckGameResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGameResultRequest.ProtoReflect.Descriptor instead.
func (*CheckGameResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *CheckGameResultRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type CheckGameResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameResult GameResult `protobuf:"varint,1,opt,name=gameResult,proto3,enum=tictactoe.GameResult" json:"gameResult,omitempty"`
}

func (x *CheckGameResultResponse) Reset() {
	*x = CheckGameResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckGameResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckGameResultResponse) ProtoMessage() {}

func (x *CheckGameResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckGameResultResponse.ProtoReflect.Descriptor instead.
func (*CheckGameResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *CheckGameResultResponse) GetGameResult() GameResult {
	if x != nil {
		return x.GameResult
	}
	return GameResult_WaitMoreJoin
}

var File_proto_rpc_proto protoreflect.FileDescriptor

var file_proto_rpc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x22, 0xcb, 0x03, 0x0a,
	0x0a, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x72,
	0x70, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74,
	0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x72, 0x70, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65,
	0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x11, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x44, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x69, 0x63,
	0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x15, 0x6f, 0x63, 0x63, 0x75, 0x70,
	0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74,
	0x6f, 0x65, 0x2e, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x79,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x59, 0x0a, 0x16, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x16, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xde, 0x03, 0x0a, 0x0b, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x63,
	0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x13, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f,
	0x65, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74,
	0x6f, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x6a, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x4f,
	0x63, 0x63, 0x75, 0x70, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x17, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x17, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x72, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x63, 0x0a, 0x15,
	0x4f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x79, 0x22, 0x55, 0x0a, 0x16, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x6f,
	0x63, 0x63, 0x75, 0x70, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x4f, 0x63,
	0x63, 0x75, 0x70, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x6f, 0x63, 0x63, 0x75,
	0x70, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x30, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x17, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x74,
	0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x61, 0x0a, 0x07,
	0x52, 0x70, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x79,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x04, 0x2a,
	0x2b, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x4e, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x01, 0x2a, 0x4b, 0x0a, 0x0a,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x4a, 0x6f,
	0x69, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e,
	0x6f, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x10, 0x03, 0x2a, 0x7a, 0x0a, 0x0c, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x48, 0x61, 0x73, 0x42, 0x65, 0x65, 0x6e, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x59, 0x6f, 0x75, 0x72, 0x54, 0x75,
	0x72, 0x6e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x41, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x10, 0x05, 0x2a, 0x48, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x61, 0x69, 0x74, 0x4d, 0x6f, 0x72, 0x65, 0x4a,
	0x6f, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x6e, 0x67, 0x6f, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x72, 0x61, 0x77, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x6f, 0x73, 0x65, 0x10, 0x04, 0x32,
	0xc9, 0x02, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x15, 0x2e, 0x74, 0x69, 0x63,
	0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x74, 0x69,
	0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x09,
	0x4d, 0x61, 0x6b, 0x65, 0x41, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x74,
	0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74,
	0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x74, 0x69, 0x63,
	0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x74, 0x6f, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2f,
	0x3b, 0x74, 0x69, 0x63, 0x74, 0x61, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_rpc_proto_rawDescOnce sync.Once
	file_proto_rpc_proto_rawDescData = file_proto_rpc_proto_rawDesc
)

func file_proto_rpc_proto_rawDescGZIP() []byte {
	file_proto_rpc_proto_rawDescOnce.Do(func() {
		file_proto_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rpc_proto_rawDescData)
	})
	return file_proto_rpc_proto_rawDescData
}

var file_proto_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_rpc_proto_goTypes = []interface{}{
	(RpcType)(0),                    // 0: tictactoe.RpcType
	(RpcStatus)(0),                  // 1: tictactoe.RpcStatus
	(JoinResult)(0),                 // 2: tictactoe.JoinResult
	(OccupyResult)(0),               // 3: tictactoe.OccupyResult
	(GameResult)(0),                 // 4: tictactoe.GameResult
	(*RpcRequest)(nil),              // 5: tictactoe.RpcRequest
	(*RpcResponse)(nil),             // 6: tictactoe.RpcResponse
	(*HelloWorldRequest)(nil),       // 7: tictactoe.HelloWorldRequest
	(*HellowWorldResponse)(nil),     // 8: tictactoe.HellowWorldResponse
	(*CreateGameRequest)(nil),       // 9: tictactoe.CreateGameRequest
	(*CreateGameResponse)(nil),      // 10: tictactoe.CreateGameResponse
	(*JoinGameRequest)(nil),         // 11: tictactoe.JoinGameRequest
	(*JoinGameResponse)(nil),        // 12: tictactoe.JoinGameResponse
	(*OccupyPositionRequest)(nil),   // 13: tictactoe.OccupyPositionRequest
	(*OccupyPositionResponse)(nil),  // 14: tictactoe.OccupyPositionResponse
	(*CheckGameResultRequest)(nil),  // 15: tictactoe.CheckGameResultRequest
	(*CheckGameResultResponse)(nil), // 16: tictactoe.CheckGameResultResponse
}
var file_proto_rpc_proto_depIdxs = []int32{
	0,  // 0: tictactoe.RpcRequest.rpcType:type_name -> tictactoe.RpcType
	7,  // 1: tictactoe.RpcRequest.helloWorldRequest:type_name -> tictactoe.HelloWorldRequest
	9,  // 2: tictactoe.RpcRequest.createGameRequest:type_name -> tictactoe.CreateGameRequest
	11, // 3: tictactoe.RpcRequest.joinGameRequest:type_name -> tictactoe.JoinGameRequest
	13, // 4: tictactoe.RpcRequest.occupyPositionRequest:type_name -> tictactoe.OccupyPositionRequest
	15, // 5: tictactoe.RpcRequest.checkGameResultRequest:type_name -> tictactoe.CheckGameResultRequest
	1,  // 6: tictactoe.RpcResponse.status:type_name -> tictactoe.RpcStatus
	8,  // 7: tictactoe.RpcResponse.hellowWorldResponse:type_name -> tictactoe.HellowWorldResponse
	10, // 8: tictactoe.RpcResponse.createGameResponse:type_name -> tictactoe.CreateGameResponse
	12, // 9: tictactoe.RpcResponse.joinGameResponse:type_name -> tictactoe.JoinGameResponse
	14, // 10: tictactoe.RpcResponse.occupyPositionResponse:type_name -> tictactoe.OccupyPositionResponse
	16, // 11: tictactoe.RpcResponse.checkGameResultResponse:type_name -> tictactoe.CheckGameResultResponse
	2,  // 12: tictactoe.JoinGameResponse.result:type_name -> tictactoe.JoinResult
	3,  // 13: tictactoe.OccupyPositionResponse.occupyResult:type_name -> tictactoe.OccupyResult
	4,  // 14: tictactoe.CheckGameResultResponse.gameResult:type_name -> tictactoe.GameResult
	5,  // 15: tictactoe.GameServer.SayHello:input_type -> tictactoe.RpcRequest
	5,  // 16: tictactoe.GameServer.InitiateGame:input_type -> tictactoe.RpcRequest
	5,  // 17: tictactoe.GameServer.MakeAMove:input_type -> tictactoe.RpcRequest
	5,  // 18: tictactoe.GameServer.JoinGame:input_type -> tictactoe.RpcRequest
	5,  // 19: tictactoe.GameServer.CheckGameStatus:input_type -> tictactoe.RpcRequest
	6,  // 20: tictactoe.GameServer.SayHello:output_type -> tictactoe.RpcResponse
	6,  // 21: tictactoe.GameServer.InitiateGame:output_type -> tictactoe.RpcResponse
	6,  // 22: tictactoe.GameServer.MakeAMove:output_type -> tictactoe.RpcResponse
	6,  // 23: tictactoe.GameServer.JoinGame:output_type -> tictactoe.RpcResponse
	6,  // 24: tictactoe.GameServer.CheckGameStatus:output_type -> tictactoe.RpcResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_rpc_proto_init() }
func file_proto_rpc_proto_init() {
	if File_proto_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloWorldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HellowWorldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OccupyPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OccupyPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGameResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckGameResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rpc_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rpc_proto_goTypes,
		DependencyIndexes: file_proto_rpc_proto_depIdxs,
		EnumInfos:         file_proto_rpc_proto_enumTypes,
		MessageInfos:      file_proto_rpc_proto_msgTypes,
	}.Build()
	File_proto_rpc_proto = out.File
	file_proto_rpc_proto_rawDesc = nil
	file_proto_rpc_proto_goTypes = nil
	file_proto_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GameServerClient is the client API for GameServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServerClient interface {
	SayHello(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error)
	InitiateGame(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error)
	MakeAMove(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error)
	JoinGame(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error)
	CheckGameStatus(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error)
}

type gameServerClient struct {
	cc grpc.ClientConnInterface
}

func NewGameServerClient(cc grpc.ClientConnInterface) GameServerClient {
	return &gameServerClient{cc}
}

func (c *gameServerClient) SayHello(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error) {
	out := new(RpcResponse)
	err := c.cc.Invoke(ctx, "/tictactoe.GameServer/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServerClient) InitiateGame(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error) {
	out := new(RpcResponse)
	err := c.cc.Invoke(ctx, "/tictactoe.GameServer/InitiateGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServerClient) MakeAMove(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error) {
	out := new(RpcResponse)
	err := c.cc.Invoke(ctx, "/tictactoe.GameServer/MakeAMove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServerClient) JoinGame(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error) {
	out := new(RpcResponse)
	err := c.cc.Invoke(ctx, "/tictactoe.GameServer/JoinGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServerClient) CheckGameStatus(ctx context.Context, in *RpcRequest, opts ...grpc.CallOption) (*RpcResponse, error) {
	out := new(RpcResponse)
	err := c.cc.Invoke(ctx, "/tictactoe.GameServer/CheckGameStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServerServer is the server API for GameServer service.
type GameServerServer interface {
	SayHello(context.Context, *RpcRequest) (*RpcResponse, error)
	InitiateGame(context.Context, *RpcRequest) (*RpcResponse, error)
	MakeAMove(context.Context, *RpcRequest) (*RpcResponse, error)
	JoinGame(context.Context, *RpcRequest) (*RpcResponse, error)
	CheckGameStatus(context.Context, *RpcRequest) (*RpcResponse, error)
}

// UnimplementedGameServerServer can be embedded to have forward compatible implementations.
type UnimplementedGameServerServer struct {
}

func (*UnimplementedGameServerServer) SayHello(context.Context, *RpcRequest) (*RpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedGameServerServer) InitiateGame(context.Context, *RpcRequest) (*RpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitiateGame not implemented")
}
func (*UnimplementedGameServerServer) MakeAMove(context.Context, *RpcRequest) (*RpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeAMove not implemented")
}
func (*UnimplementedGameServerServer) JoinGame(context.Context, *RpcRequest) (*RpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinGame not implemented")
}
func (*UnimplementedGameServerServer) CheckGameStatus(context.Context, *RpcRequest) (*RpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckGameStatus not implemented")
}

func RegisterGameServerServer(s *grpc.Server, srv GameServerServer) {
	s.RegisterService(&_GameServer_serviceDesc, srv)
}

func _GameServer_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tictactoe.GameServer/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerServer).SayHello(ctx, req.(*RpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameServer_InitiateGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerServer).InitiateGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tictactoe.GameServer/InitiateGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerServer).InitiateGame(ctx, req.(*RpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameServer_MakeAMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerServer).MakeAMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tictactoe.GameServer/MakeAMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerServer).MakeAMove(ctx, req.(*RpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameServer_JoinGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerServer).JoinGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tictactoe.GameServer/JoinGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerServer).JoinGame(ctx, req.(*RpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameServer_CheckGameStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServerServer).CheckGameStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tictactoe.GameServer/CheckGameStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServerServer).CheckGameStatus(ctx, req.(*RpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tictactoe.GameServer",
	HandlerType: (*GameServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _GameServer_SayHello_Handler,
		},
		{
			MethodName: "InitiateGame",
			Handler:    _GameServer_InitiateGame_Handler,
		},
		{
			MethodName: "MakeAMove",
			Handler:    _GameServer_MakeAMove_Handler,
		},
		{
			MethodName: "JoinGame",
			Handler:    _GameServer_JoinGame_Handler,
		},
		{
			MethodName: "CheckGameStatus",
			Handler:    _GameServer_CheckGameStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/rpc.proto",
}
